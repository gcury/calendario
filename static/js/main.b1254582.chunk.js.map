{"version":3,"sources":["components/calendario/index.js","App.js","index.js"],"names":["Calendario","props","data","primeiroMes","avancar","voltar","dias","useState","calendario","setCalendario","ativo","setAtivo","nomeMes","toLocaleString","month","year","getFullYear","useEffect","getMonth","dayWeek","Date","getDay","lastDay","getDate","totalDias","map","d","push","i","unshift","className","charAt","toUpperCase","slice","size","onClick","item","sel","App","dataAtual","setDataAtual","proximaData","setProximaData","lg","ano","mes","novaData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1254582.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport { ChevronLeft, ChevronRight } from 'react-feather'\r\nimport './calendario.css';\r\n\r\nconst Calendario = (props) => {\r\n  const { data, primeiroMes, avancar, voltar } = props;\r\n\r\n  const dias = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',\r\n    '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'];\r\n\r\n  const [calendario, setCalendario] = useState([]);\r\n  const [ativo, setAtivo] = useState(null);\r\n  const nomeMes = data.toLocaleString('default', { month: 'long' });\r\n  const year = data.getFullYear();\r\n\r\n  useEffect(() => {\r\n    let month = data.getMonth();\r\n    let dayWeek = new Date(year, month, 1).getDay();\r\n    let lastDay = new Date(year, month + 1, 0).getDate();\r\n    let totalDias = [];\r\n    dias.map((d) => {\r\n      if (d <= lastDay) {\r\n        totalDias.push(d);\r\n      }\r\n      return totalDias;\r\n    });\r\n\r\n    for (let i = 0; i < dayWeek; i++) {\r\n      totalDias.unshift('');\r\n    }\r\n\r\n    setCalendario(totalDias);\r\n  }, [data]);\r\n\r\n  const diaAtivo = (sel) => {\r\n    if (sel === ativo) {\r\n      return 'dias active'\r\n    } else {\r\n      return 'dias'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='d-flex justify-content-between'>\r\n        <span>{nomeMes.charAt(0).toUpperCase() + nomeMes.slice(1) + ', ' + year}</span>\r\n        {primeiroMes ?\r\n          <div>\r\n            <Button size='sm' onClick={() => voltar()}>\r\n              <ChevronLeft />\r\n            </Button>\r\n            <Button size='sm'>\r\n              <ChevronRight onClick={() => avancar()} />\r\n            </Button>\r\n          </div>\r\n          : null\r\n        }\r\n\r\n      </div>\r\n      <div className='calendario'>\r\n        <div className='espacoDias'>\r\n          <span className='diasHeader'>D</span>\r\n          <span className='diasHeader'>S</span>\r\n          <span className='diasHeader'>T</span>\r\n          <span className='diasHeader'>Q</span>\r\n          <span className='diasHeader'>Q</span>\r\n          <span className='diasHeader'>S</span>\r\n          <span className='diasHeader'>S</span>\r\n          {calendario.map((item, i) => (\r\n            item ?\r\n              <span key={i} className={diaAtivo(i)} onClick={() => {\r\n                if (ativo === null || ativo !== i) {\r\n                  setAtivo(i);\r\n                } else {\r\n                  setAtivo(null);\r\n                }\r\n              }}>\r\n                <span>{item}</span>\r\n                <div className='espacoDot'>\r\n                </div>\r\n              </span>\r\n              : <span key={i} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Fragment >\r\n  )\r\n}\r\n\r\nexport default Calendario;\r\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport './app.css';\nimport Calendario from './components/calendario'\n\nconst App = () => {\n  const data = new Date();\n  const year = data.getFullYear();\n  const month = data.getMonth(); \n  const [dataAtual, setDataAtual] = useState(new Date(year, month, 1));\n  const [proximaData, setProximaData] = useState(new Date(year, month + 1, 1));\n  \n  const avancaMes = () => {\n    setDataAtual(proximaData);\n    let ano = proximaData.getFullYear();\n    let mes = proximaData.getMonth();\n    let novaData = new Date(ano, mes + 1, 1)\n    setProximaData(novaData);\n  };\n\n  const voltaMes = () => {\n    setProximaData(dataAtual);\n    let ano = dataAtual.getFullYear();\n    let mes = dataAtual.getMonth();\n    let novaData = new Date(ano, mes - 1, 1)\n    setDataAtual(novaData);\n  }\n\n  return (\n    <Container>\n      <Row className='match-height'>\n        <Col lg='2'>\n        </Col>\n        <Col lg='10'>\n          <Col lg='4'>\n            <Col>\n              <Calendario data={dataAtual} primeiroMes={true} avancar={avancaMes} voltar={voltaMes} />\n            </Col>\n            <Col>\n              <Calendario data={proximaData} primeiroMes={false} />\n            </Col>\n          </Col>\n          <Col lg='4'>\n          </Col>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}